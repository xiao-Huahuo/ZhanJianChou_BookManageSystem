openapi: 3.0.3
info:
  title: "图书管理系统 API"
  description: "一个基于C++/Crow后端的图书管理系统 RESTful API。"
  version: "1.0.0"

servers:
  - url: "http://localhost:18080/api"
    description: "本地开发服务器"

tags:
  - name: "用户与认证 (User & Auth)"
    description: "处理用户注册、登录和身份认证"
  - name: "图书管理 (Books)"
    description: "图书的增删改查操作"
  - name: "借阅与归还 (Borrowing)"
    description: "处理图书借阅、归还、历史记录和罚款"
  - name: "管理员 (Admin)"
    description: "系统管理员专属功能，如备份恢复和反馈查看"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "用户ID"
        username:
          type: string
          description: "用户名"
        email:
          type: string
          format: email
          description: "邮箱地址"
        role:
          type: string
          enum: [user, admin]
          description: "用户角色"
        created_at:
          type: string
          format: date-time
          description: "创建时间"
          
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "图书ID"
        title:
          type: string
          description: "书名"
        author:
          type: string
          description: "作者"
        isbn:
          type: string
          description: "ISBN号"
        total_quantity:
          type: integer
          description: "总馆藏数量"
        available_quantity:
          type: integer
          description: "当前可借阅数量"
        category:
          type: string
          description: "图书分类"
        published_date:
          type: string
          format: date
          description: "出版日期"

    BorrowRecord:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "借阅记录ID"
        user_id:
          type: integer
          format: int64
          description: "用户ID"
        book_id:
          type: integer
          format: int64
          description: "图书ID"
        borrow_date:
          type: string
          format: date-time
          description: "借阅日期"
        due_date:
          type: string
          format: date-time
          description: "应还日期"
        return_date:
          type: string
          format: date-time
          nullable: true
          description: "实际归还日期"
        status:
          type: string
          enum: [borrowed, returned, overdue]
          description: "记录状态"

    Feedback:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "反馈ID"
        user_id:
          type: integer
          format: int64
          description: "提交用户ID"
        content:
          type: string
          description: "反馈内容"
        created_at:
          type: string
          format: date-time
          description: "提交时间"
          
    Error:
      type: object
      properties:
        error:
          type: string
          description: "错误信息描述"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "使用JWT进行认证，在请求头中加入 'Authorization: Bearer {token}'"

paths:
  /register:
    post:
      tags:
        - "用户与认证 (User & Auth)"
      summary: "用户注册"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
                email:
                  type: string
                  format: email
      responses:
        "201":
          description: "注册成功"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: "请求参数错误或用户已存在"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      tags:
        - "用户与认证 (User & Auth)"
      summary: "用户登录"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: "登录成功"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: "JWT认证令牌"
        "401":
          description: "认证失败"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me:
    get:
      tags:
        - "用户与认证 (User & Auth)"
      summary: "获取当前用户信息"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "获取成功"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: "未认证"

  /books:
    get:
      tags:
        - "图书管理 (Books)"
      summary: "检索图书列表"
      parameters:
        - in: query
          name: title
          schema:
            type: string
          description: "按书名模糊查询"
        - in: query
          name: author
          schema:
            type: string
          description: "按作者模糊查询"
      responses:
        "200":
          description: "成功返回图书列表"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      tags:
        - "图书管理 (Books)"
      summary: "新增图书 (管理员)"
      description: "仅限管理员操作"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        "201":
          description: "创建成功"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "401":
          description: "未认证"
        "403":
          description: "无权限"
          
  /books/{id}:
    get:
      tags:
        - "图书管理 (Books)"
      summary: "获取单本图书详情"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "获取成功"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "404":
          description: "图书未找到"
    put:
      tags:
        - "图书管理 (Books)"
      summary: "更新图书信息 (管理员)"
      description: "仅限管理员操作"
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        "200":
          description: "更新成功"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "403":
          description: "无权限"
        "404":
          description: "图书未找到"
    delete:
      tags:
        - "图书管理 (Books)"
      summary: "删除图书 (管理员)"
      description: "仅限管理员操作"
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: "删除成功"
        "403":
          description: "无权限"
        "404":
          description: "图书未找到"

  /borrow:
    post:
      tags:
        - "借阅与归还 (Borrowing)"
      summary: "借阅图书"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_id:
                  type: integer
                  format: int64
      responses:
        "201":
          description: "借阅成功"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowRecord'
        "400":
          description: "图书库存不足或已借阅"

  /return:
    post:
      tags:
        - "借阅与归还 (Borrowing)"
      summary: "归还图书"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                borrow_id:
                  type: integer
                  format: int64
      responses:
        "200":
          description: "归还成功"
        "400":
          description: "无效的借阅记录"

  /borrow/history:
    get:
      tags:
        - "借阅与归还 (Borrowing)"
      summary: "获取个人借阅历史"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "成功返回历史记录"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BorrowRecord'

  /fines/{id}/pay:
    post:
      tags:
        - "借阅与归还 (Borrowing)"
      summary: "支付罚款"
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: "罚款记录ID"
      responses:
        "200":
          description: "支付成功"
        "400":
          description: "无效的罚款记录"
          
  /admin/backup:
    post:
      tags:
        - "管理员 (Admin)"
      summary: "创建数据库备份 (管理员)"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "备份任务已启动"
        "403":
          description: "无权限"

  /admin/restore:
    post:
      tags:
        - "管理员 (Admin)"
      summary: "从备份恢复数据库 (管理员)"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "恢复任务已启动"
        "403":
          description: "无权限"

  /admin/feedback:
    get:
      tags:
        - "管理员 (Admin)"
      summary: "查看用户反馈 (管理员)"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "成功返回反馈列表"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feedback'
        "403":
          description: "无权限"